openapi: "3.0.2"
info:
  title: Hanly Api
  version: "1.0"
servers:
  - url: http://localhost:8081/api
tags:
  - name: signin/signup
    description: 認証関連
  - name: me
    description: ログインユーザ関連
  - name: friend
    description: 友達関連
paths:
  /oauth/token:
    post:
      tags:
        - signin/signup
      summary: サインイン
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                grant_type:
                  type: string
                  description: グラントタイプ。「password」固定
                client_id:
                  type: integer
                  description: クライアントID
                client_secret:
                  type: string
                  description: クライアントシークレット
                username:
                  type: string
                  format: email
                  description: メールアドレス（usernameとなっているけどメールアドレスです）
                password:
                  type: string
                  format: password
                  description: パスワード
                scope:
                  type: string
                  description: スコープ。「*」固定
              required:
                - grant_type
                - client_id
                - client_secret
                - username
                - password
                - scope
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  token_type:
                    type: string
                    description: トークンタイプ。「Bearer」固定
                  expires_in:
                    type: integer
                    description: 有効期限。「31536000」（１年）固定
                  access_token:
                    type: string
                    description: アクセストークン
                  refresh_token:
                    type: string
                    description: リフレッシュトークン
                required:
                  - token_type
                  - expires_in
                  - access_token
                  - refresh_token
  /signup:
    post:
      tags:
        - signin/signup
      summary: サインアップ
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  maxLength: 100
                  description: メールアドレス（uniqueであること）
                password:
                  type: string
                  minLength: 8
                  maxLength: 100
                  description: パスワード
                nickname:
                  type: string
                  maxLength: 50
                  description: ニックネーム
              required:
                - email
                - password
                - nickname
      responses:
        "422":
          $ref: "#/components/responses/ValidationError"
        "201":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    description: 友達ID
                  nickname:
                    type: string
                    description: メールアドレス
                  email:
                    type: string
                    format: email
                    description: ニックネーム
                required:
                  - id
                  - nickname
                  - email
  /me:
    get:
      security:
        - bearerAuth: []
      tags:
        - me
      summary: ユーザー情報取得
      responses:
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Friend"
  /my/image:
    post:
      security:
        - bearerAuth: []
      tags:
        - me
      summary: ユーザー画像登録
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                  description: 画像バイナリ（サイズは250KBまで。拡張子はjpg,jpeg,png,svgのみ。）
              required:
                - file
      responses:
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "422":
          $ref: "#/components/responses/ValidationError"
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  image_url:
                    type: string
                    format: url
                    description: 画像URL
                required:
                  - image_url
  /my/pin:
    post:
      security:
        - bearerAuth: []
      tags:
        - me
      summary: ピンを打って５分以内に１００メートル以内でピンを打っている人と友達になる
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                latitude:
                  type: number
                  format: double
                  minLength: 90
                  maxLength: 90
                  description: 緯度
                longitude:
                  type: number
                  format: double
                  minLength: 180
                  maxLength: 180
                  description: 経度
              required:
                - latitude
                - longitude
      responses:
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "422":
          $ref: "#/components/responses/ValidationError"
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                nullable: true
                description: 友達になった人の一覧
                items:
                  $ref: "#/components/schemas/Friend"

  /friends:
    get:
      security:
        - bearerAuth: []
      tags:
        - friend
      summary: 友達一覧取得
      responses:
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                nullable: true
                items:
                  $ref: "#/components/schemas/Friend"

  /friends/{friendId}:
    get:
      security:
        - bearerAuth: []
      tags:
        - friend
      summary: 友達情報取得
      responses:
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "403":
          $ref: "#/components/responses/ForbiddenError"
        "404":
          $ref: "#/components/responses/NotFoundError"
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/Friend"

# -----------------------------------------------------------

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  responses:
    UnauthorizedError:
      description: Unauthenticated.
    ForbiddenError:
      description: This action is unauthorized.
    ValidationError:
      description: The given data was invalid.
    NotFoundError:
      description: Not Found.

  schemas:
    Friend:
      type: object
      properties:
        id:
          type: integer
          description: 友達ID
        nickname:
          type: string
          description: ニックネーム
        email:
          type: string
          format: email
          description: メールアドレス
        image_url:
          type: string
          format: url
          description: 画像URL
        pin:
          $ref: "#/components/schemas/Pin"
      required:
        - id
        - nickname
        - email
    Pin:
      type: object
      properties:
        datetime:
          type: string
          format: date-time
          description: ピンを打った時間(ISO8601)
        latitude:
          type: number
          format: double
          description: 緯度
        longitude:
          type: number
          format: double
          description: 経度
      required:
        - datetime
        - latitude
        - longitude
